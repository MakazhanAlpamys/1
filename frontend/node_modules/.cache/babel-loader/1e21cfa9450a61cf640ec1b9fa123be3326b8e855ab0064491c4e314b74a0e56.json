{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tokmo\\\\realnest2\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useCallback } from 'react';\nimport jwt_decode from 'jwt-decode';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_URL = 'http://localhost:5000/api';\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Logout user - определяем функцию до её использования\n  const logout = () => {\n    // Remove token from localStorage\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n\n    // Remove token from axios defaults\n    delete axios.defaults.headers.common['Authorization'];\n\n    // Reset user in state\n    setUser(null);\n  };\n\n  // Get user profile from API\n  const getUserProfile = useCallback(async token => {\n    try {\n      const res = await axios.get(`${API_URL}/auth/profile`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n\n      // Сохраняем пользователя в localStorage для восстановления после перезапуска\n      localStorage.setItem('user', JSON.stringify(res.data.user));\n      setUser(res.data.user);\n      setLoading(false);\n    } catch (err) {\n      console.error('Error fetching user profile:', err);\n      logout();\n      setLoading(false);\n    }\n  }, []);\n\n  // Initialize auth state from localStorage\n  useEffect(() => {\n    const initializeAuth = () => {\n      try {\n        const token = localStorage.getItem('token');\n        const savedUser = localStorage.getItem('user');\n        if (token) {\n          // Check if token is expired\n          const decoded = jwt_decode(token);\n          const currentTime = Date.now() / 1000;\n          if (decoded.exp < currentTime) {\n            // Token is expired\n            logout();\n            setLoading(false);\n            return;\n          }\n\n          // Set token on axios defaults\n          axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n          // Если есть сохраненные данные пользователя, используем их\n          if (savedUser) {\n            setUser(JSON.parse(savedUser));\n            setLoading(false);\n          } else {\n            // Иначе запрашиваем с сервера\n            getUserProfile(token);\n          }\n        } else {\n          setLoading(false);\n        }\n      } catch (err) {\n        console.error('Auth initialization error:', err);\n        logout();\n        setLoading(false);\n      }\n    };\n    initializeAuth();\n  }, [getUserProfile]);\n\n  // Register user\n  const register = async userData => {\n    try {\n      setError(null);\n\n      // Преобразуем имена полей для соответствия бэкенду\n      const transformedData = {\n        first_name: userData.firstName,\n        last_name: userData.lastName,\n        email: userData.email,\n        password: userData.password,\n        phone: userData.phone\n      };\n      const res = await axios.post(`${API_URL}/auth/register`, transformedData);\n      const {\n        token,\n        user\n      } = res.data;\n\n      // Set token in localStorage\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n\n      // Set token on axios defaults\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n      // Set user in state\n      setUser(user);\n      return {\n        success: true,\n        user\n      };\n    } catch (err) {\n      var _err$response, _err$response$data;\n      const errorMessage = ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Registration failed';\n      setError(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Login user\n  const login = async (email, password) => {\n    try {\n      setError(null);\n      const res = await axios.post(`${API_URL}/auth/login`, {\n        email,\n        password\n      });\n      const {\n        token,\n        user\n      } = res.data;\n\n      // Set token and user in localStorage\n      localStorage.setItem('token', token);\n      localStorage.setItem('user', JSON.stringify(user));\n\n      // Set token on axios defaults\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n      // Set user in state\n      setUser(user);\n      return {\n        success: true,\n        user\n      };\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      const errorMessage = ((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Login failed';\n      setError(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Update profile\n  const updateProfile = async profileData => {\n    try {\n      setError(null);\n      const res = await axios.put(`${API_URL}/users/profile`, profileData);\n\n      // Update user in state and localStorage\n      setUser(res.data.user);\n      localStorage.setItem('user', JSON.stringify(res.data.user));\n      return {\n        success: true,\n        user: res.data.user\n      };\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      const errorMessage = ((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || 'Profile update failed';\n      setError(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Change password\n  const changePassword = async passwordData => {\n    try {\n      setError(null);\n      await axios.put(`${API_URL}/users/password`, passwordData);\n      return {\n        success: true\n      };\n    } catch (err) {\n      var _err$response4, _err$response4$data;\n      const errorMessage = ((_err$response4 = err.response) === null || _err$response4 === void 0 ? void 0 : (_err$response4$data = _err$response4.data) === null || _err$response4$data === void 0 ? void 0 : _err$response4$data.message) || 'Password change failed';\n      setError(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    }\n  };\n\n  // Check if user is authenticated\n  const isAuthenticated = () => {\n    return user !== null;\n  };\n\n  // Check if user is admin\n  const isAdmin = () => {\n    return (user === null || user === void 0 ? void 0 : user.role) === 'admin';\n  };\n\n  // Clear error\n  const clearError = () => {\n    setError(null);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      loading,\n      error,\n      register,\n      login,\n      logout,\n      updateProfile,\n      changePassword,\n      isAuthenticated,\n      isAdmin,\n      clearError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 201,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"8OmFYfm2G6TUSQ6gM/a1CbNzLHU=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useCallback","jwt_decode","axios","jsxDEV","_jsxDEV","API_URL","AuthContext","AuthProvider","children","_s","user","setUser","loading","setLoading","error","setError","logout","localStorage","removeItem","defaults","headers","common","getUserProfile","token","res","get","Authorization","setItem","JSON","stringify","data","err","console","initializeAuth","getItem","savedUser","decoded","currentTime","Date","now","exp","parse","register","userData","transformedData","first_name","firstName","last_name","lastName","email","password","phone","post","success","_err$response","_err$response$data","errorMessage","response","message","login","_err$response2","_err$response2$data","updateProfile","profileData","put","_err$response3","_err$response3$data","changePassword","passwordData","_err$response4","_err$response4$data","isAuthenticated","isAdmin","role","clearError","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/tokmo/realnest2/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useCallback } from 'react';\r\nimport jwt_decode from 'jwt-decode';\r\nimport axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:5000/api';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  // Logout user - определяем функцию до её использования\r\n  const logout = () => {\r\n    // Remove token from localStorage\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    \r\n    // Remove token from axios defaults\r\n    delete axios.defaults.headers.common['Authorization'];\r\n    \r\n    // Reset user in state\r\n    setUser(null);\r\n  };\r\n\r\n  // Get user profile from API\r\n  const getUserProfile = useCallback(async (token) => {\r\n    try {\r\n      const res = await axios.get(`${API_URL}/auth/profile`, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`\r\n        }\r\n      });\r\n      \r\n      // Сохраняем пользователя в localStorage для восстановления после перезапуска\r\n      localStorage.setItem('user', JSON.stringify(res.data.user));\r\n      \r\n      setUser(res.data.user);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      console.error('Error fetching user profile:', err);\r\n      logout();\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  // Initialize auth state from localStorage\r\n  useEffect(() => {\r\n    const initializeAuth = () => {\r\n      try {\r\n        const token = localStorage.getItem('token');\r\n        const savedUser = localStorage.getItem('user');\r\n        \r\n        if (token) {\r\n          // Check if token is expired\r\n          const decoded = jwt_decode(token);\r\n          const currentTime = Date.now() / 1000;\r\n          \r\n          if (decoded.exp < currentTime) {\r\n            // Token is expired\r\n            logout();\r\n            setLoading(false);\r\n            return;\r\n          }\r\n          \r\n          // Set token on axios defaults\r\n          axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n          \r\n          // Если есть сохраненные данные пользователя, используем их\r\n          if (savedUser) {\r\n            setUser(JSON.parse(savedUser));\r\n            setLoading(false);\r\n          } else {\r\n            // Иначе запрашиваем с сервера\r\n            getUserProfile(token);\r\n          }\r\n        } else {\r\n          setLoading(false);\r\n        }\r\n      } catch (err) {\r\n        console.error('Auth initialization error:', err);\r\n        logout();\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    initializeAuth();\r\n  }, [getUserProfile]);\r\n\r\n  // Register user\r\n  const register = async (userData) => {\r\n    try {\r\n      setError(null);\r\n      \r\n      // Преобразуем имена полей для соответствия бэкенду\r\n      const transformedData = {\r\n        first_name: userData.firstName,\r\n        last_name: userData.lastName,\r\n        email: userData.email,\r\n        password: userData.password,\r\n        phone: userData.phone\r\n      };\r\n      \r\n      const res = await axios.post(`${API_URL}/auth/register`, transformedData);\r\n      \r\n      const { token, user } = res.data;\r\n      \r\n      // Set token in localStorage\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      \r\n      // Set token on axios defaults\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      \r\n      // Set user in state\r\n      setUser(user);\r\n      \r\n      return { success: true, user };\r\n    } catch (err) {\r\n      const errorMessage = err.response?.data?.message || 'Registration failed';\r\n      setError(errorMessage);\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  };\r\n\r\n  // Login user\r\n  const login = async (email, password) => {\r\n    try {\r\n      setError(null);\r\n      const res = await axios.post(`${API_URL}/auth/login`, { email, password });\r\n      \r\n      const { token, user } = res.data;\r\n      \r\n      // Set token and user in localStorage\r\n      localStorage.setItem('token', token);\r\n      localStorage.setItem('user', JSON.stringify(user));\r\n      \r\n      // Set token on axios defaults\r\n      axios.defaults.headers.common['Authorization'] = `Bearer ${token}`;\r\n      \r\n      // Set user in state\r\n      setUser(user);\r\n      \r\n      return { success: true, user };\r\n    } catch (err) {\r\n      const errorMessage = err.response?.data?.message || 'Login failed';\r\n      setError(errorMessage);\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  };\r\n\r\n  // Update profile\r\n  const updateProfile = async (profileData) => {\r\n    try {\r\n      setError(null);\r\n      const res = await axios.put(`${API_URL}/users/profile`, profileData);\r\n      \r\n      // Update user in state and localStorage\r\n      setUser(res.data.user);\r\n      localStorage.setItem('user', JSON.stringify(res.data.user));\r\n      \r\n      return { success: true, user: res.data.user };\r\n    } catch (err) {\r\n      const errorMessage = err.response?.data?.message || 'Profile update failed';\r\n      setError(errorMessage);\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  };\r\n\r\n  // Change password\r\n  const changePassword = async (passwordData) => {\r\n    try {\r\n      setError(null);\r\n      await axios.put(`${API_URL}/users/password`, passwordData);\r\n      \r\n      return { success: true };\r\n    } catch (err) {\r\n      const errorMessage = err.response?.data?.message || 'Password change failed';\r\n      setError(errorMessage);\r\n      return { success: false, error: errorMessage };\r\n    }\r\n  };\r\n\r\n  // Check if user is authenticated\r\n  const isAuthenticated = () => {\r\n    return user !== null;\r\n  };\r\n\r\n  // Check if user is admin\r\n  const isAdmin = () => {\r\n    return user?.role === 'admin';\r\n  };\r\n\r\n  // Clear error\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        user,\r\n        loading,\r\n        error,\r\n        register,\r\n        login,\r\n        logout,\r\n        updateProfile,\r\n        changePassword,\r\n        isAuthenticated,\r\n        isAdmin,\r\n        clearError\r\n      }}\r\n    >\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}